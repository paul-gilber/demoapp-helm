// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/kubernetes-helm
{
	"name": "Kubernetes - Local Configuration",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/base:bullseye",

	"features": {
		"ghcr.io/devcontainers/features/docker-outside-of-docker:1": {},
		"ghcr.io/devcontainers/features/kubectl-helm-minikube:1": {
			"version": "latest",
			"helm": "latest",
			"minikube": "none"
		},
		"./local-features/copy-kube-config": {},
		"./local-features/copy-ssh": {},
		"ghcr.io/devcontainers/features/common-utils:2": {},
		"ghcr.io/devcontainers/features/github-cli:1": {},
		"ghcr.io/mpriscella/features/helm-chart-testing:1": {},
		"ghcr.io/devcontainers-contrib/features/yamllint:2": {},
		"ghcr.io/stuartleeks/dev-container-features/shell-history:0": {},
		"ghcr.io/joshuanianji/devcontainer-features/github-cli-persistence:0": {},
		"ghcr.io/mpriscella/features/kind:1": {}
	},

	"remoteEnv": {
		"SYNC_LOCALHOST_KUBECONFIG": "true",
		"SYNC_LOCALHOST_SSH": "true"
	},

	"initializeCommand": "cd .devcontainer && bash ensure-mount-sources",
	"mounts": [
		// Mounts host machine ~/.ssh directory
		{
			"source": "${env:HOME}${env:USERPROFILE}/.ssh",
			"target": "/usr/local/share/ssh-localhost",
			"type": "bind"
		},
		// Mounts host machine ~/.kube directory
		{
			"source": "${env:HOME}${env:USERPROFILE}/.kube",
			"target": "/usr/local/share/kube-localhost",
			"type": "bind"
		}
	],
	"customizations": {
		"vscode": {
			"extensions": [
				"ms-vscode-remote.remote-containers",
				"Tim-Koehler.helm-intellisense",
				"ms-kubernetes-tools.vscode-kubernetes-tools",
				"redhat.vscode-openshift-extension-pack",
				"redhat.vscode-openshift-connector",
				"github.vscode-github-actions"
			]
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": ".devcontainer/postCreateCommand.sh"

	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
