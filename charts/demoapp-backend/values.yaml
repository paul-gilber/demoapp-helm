---
# Default values for demoapp-backend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

image:
  repository: ghcr.io/paul-gilber/demoapp-backend
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Deployment container environment variables
# https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#environment-variables
env: {}

# Deployment container environment variables
# https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#environment-variables
envFrom: {}

# Health probes
# Startup Probe protects (blocks readiness and liveness) the application during start-up
startupProbe:
  # Allows up to 5 minutes start-up time (periodSeconds X failureThreshold)
  failureThreshold: 20
  periodSeconds: 15
  successThreshold: 1
  timeoutSeconds: 3

readinessProbe:
  failureThreshold: 3
  periodSeconds: 15
  successThreshold: 1
  timeoutSeconds: 3

livenessProbe:
  failureThreshold: 3
  periodSeconds: 15
  successThreshold: 1
  timeoutSeconds: 3

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # Creating a route through an Ingress object
    # https://docs.openshift.com/container-platform/4.11/networking/routes/route-configuration.html#nw-ingress-creating-a-route-via-an-ingress_route-configuration
    # route.openshift.io/termination: edge
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

openshift:
  enabled: false    # Is this deployment for OpenShift?
  # OpenShift route
  route:
    enabled: false    # Create OpenShift route?
    annotations: {}
    host: ''    # Route host, autogenerated by cluster when unspecified
    path: /
    # tls:
    #   termination: edge
  # OpenShift SCC
  scc:
    mysql: anyuid

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Values for mysql: https://artifacthub.io/packages/helm/bitnami/mysql
mysql:
  enabled: true
  fullnameOverride: mysql
  image:
    registry: docker.io
    repository: mysql
    tag: "8.0"
  auth:
    createDatabase: true
    database: demoapp
    username: ""
    password: ""
    existingSecret: ""
  primary:
    persistence:
      enabled: false
